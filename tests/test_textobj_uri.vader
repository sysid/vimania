# vim: set ts=2 sw=2 tw=120 et :
"----------------------------------- test_textobj_uri.vader -----------------------------------

Before:
  messages clear
  let g:twvim_debug = 1
  let g:os = 'Darwin'
  "source ~/dev/vim/vim-textobj-uri/plugin/textobj/uri.vim

# Successfull Tests
Given (text-with-links ):
  file://$HOME/dev/vim/vimtool/tests/data/vimtool.pdf
Do ():
  go
Then ():
  Messages
  Cfilter Opening
  Log printf("Len of location list: %s", len(getqflist()))
  Assert len(getqflist()) == 1

"Given (fullpath):
"  file:///Users/Q187392/dev/vim/vimtool/tests/data/vimtool.pdf
"Given (blank):
"  vimtool::https:// $HOME/dev/vim/vim-textobj-uri/test/vimtool//vimtool.pdf
"Given (double slash):
"  vimtool::https://$HOME/dev/vim/vim-textobj-uri/test/vimtool//vimtool.pdf
"Given (apostrophy):
"  "vimtool::.....://$HOME/dev/vim/vim-textobj-uri/test/vimtool//vimtool.pdf"

"Given (markdown preview):
"  vimtool::/Users/Q187392/dev/vim/vimtool/tests/data/test.md
"Do (should open im mareke2):
"  go
"Then ():
"  Messages
"  Cfilter Opening
"  Log printf("Len of location list: %s", len(getqflist()))
"  Assert len(getqflist()) == 1

Given (markdown edit):
  vim::/Users/Q187392/dev/vim/vimtool/tests/data/test.md
Do (open edit in vim):
  go
Then ():
  Messages
  Cfilter Opening
  Log printf("Len of location list: %s", len(getqflist()))
  Assert len(getqflist()) == 1


Given (markdown edit):
  todo::- [-] bla blub vimtool now 123
Do (open edit in vim):
  go
Then ():
  Messages
  Cfilter Opening
  Log printf("Len of location list: %s", len(getqflist()))
  Assert len(getqflist()) == 1


# Failing Tests
Given (should not work: vimtool://):
  vimtool://$HOME/dev/vim/vimtool/tests/data/vimtool.pdf
Do (invalid URI):
  go
Then ():
  Messages
  Cfilter /No URL/
  Log printf("Len of location list: %s", len(getqflist()))
  Assert len(getqflist()) == 1


"Execute (TwFindTd: assert vimwiki filetype):
"  TwFindTd e4m %
"  AssertEqual 'vimwiki', &filetype
